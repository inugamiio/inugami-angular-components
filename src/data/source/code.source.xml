<xml>

<!--*********************************************************************** 
* 
***********************************************************************-->
<src name="importModule">
<![CDATA[
import { InugamiCodeModule } from 'inugami-components/code';


@NgModule({
    imports: [
    //...
    // Inugami Modules --------
    InugamiCodeModule
    ]
})
export class AppModule { }
]]>
</src>


<src name="angularConfig">
<![CDATA[
{
    "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
    "version": 1,
    "newProjectRoot": "projects",
    "projects": {
        "my-project": {
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "options": {
                        "styles": [
                            "node_modules/highlight.js/styles/github.css"
                        ],
                        "allowedCommonJsDependencies":[
                            "highlight.js"
                        ]
                    }
                }
            }
        }
    }
}

]]>
</src>

    <!--*********************************************************************** 
    * 
    ***********************************************************************-->
    <src name="defaultExample">
<![CDATA[
<inu-code *ngIf="sourceCodes"
          title="Default example"
          languages="xml"
          [source]="sourceCodes['defaultExample']">
</inu-code>
]]>
    </src>

    <src name="defaultExampleTs">
        <![CDATA[
@Component({
    templateUrl: './code.view.html',
    styleUrls: ['./code.view.scss']
})
export class CodeView implements OnInit {
        
    sourceCodes:any|undefined = undefined;
    
    constructor(private sourceCodeService: SourceCodeService) { }
    
    ngOnInit(): void {
        this.sourceCodeService.loadSourceCodeFromXML('data/source/code.source.xml')
        .subscribe({
            next : res => this.sourceCodes = res
        });
    }
}
        ]]>
            </src>

    
</xml>
    